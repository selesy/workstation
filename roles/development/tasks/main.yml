---
# File: roles/development/tasks/main.yml

#
# Languages
#

# Go

- name: "remove the Debian Go language packages"
  apt:
    name: "{{ packages }}"
    state: "absent"
  vars:
    packages:
    - "golang-1.10-go"
    - "golang-golang-x-tools"
  tags:
    - "languages"
    - "go"

- name: "create the Go installation directory"
  file:
    name: "{{ go_installation_directory }}"
    state: "directory"
  tags:
    - "languages"
    - "go"

- name: "download and unpack the Go archive"
  unarchive:
    remote_src: "yes"
    src: "{{ go_url }}"
    dest: "{{ go_installation_directory }}"
    creates: "{{ go_home_directory }}"
  register: "go_download_unarchive_result"
  tags:
    - "languages"
    - "go"

- name: "move the go installation to somewhere maintainable"
  command: "mv {{ go_archive_directory }} {{ go_home_directory }}"
  when: "go_download_unarchive_result is changed"
  tags:
    - "languages"
    - "go"

- name: "create a pretty symlink to the latest version"
  file:
    src: "{{ go_home_directory }}"
    dest: "{{ go_installation_directory }}/latest"
    state: "link"
  tags:
    - "languages"
    - "go"

- name: "create symlinks for the go executables"
  file:
    src: "{{ go_home_directory }}/bin/{{ item }}"
    dest: "/usr/bin/{{ item }}"
    state: "link"
  with_items:
    - "go"
    - "gofmt"
  tags:
    - "languages"
    - "go"

- name: "set-up the go environment"
  template:
    src: "../files/go.sh"
    dest: "/etc/profile.d"
  tags:
    - "languages"
    - "go"

- name: "create a directory for go tools"
  file:
    path: "{{ go_tools_directory }}/src"
    state: "directory"
  tags:
    - "languages"
    - "go"
    - "go-tools"

- include: "../../install_go_packages.yml"
  vars:
    name: "add useful go packages"
    packages:
      - "github.com/uudashr/gopkgs/cmd/gopkgs"
      - "github.com/kisielk/errcheck"
      - "github.com/tsliwowicz/go-wrk"
      - "github.com/uber/go-torch"
      - "github.com/google/pprof"
      # - "github.com/golangci/golangci-lint/cmd/golangci-lint@v1.27.0"
      - "github.com/zimmski/go-mutesting/cmd/go-mutesting"
      - "golang.org/x/tools/gopls"
      - "golang.org/x/tools/godoc"
      - "github.com/go-delve/delve/cmd/dlv"
      - "github.com/fullstorydev/grpcurl/cmd/grpcurl"
      - "github.com/golang/protobuf/protoc-gen-go"
      - "google.golang.org/grpc/cmd/protoc-gen-go-grpc"
      - "github.com/sonatype-nexus-community/nancy"
      - "github.com/golang-migrate/migrate/cmd/migrate"
      - "github.com/swaggo/swag/cmd/swag"
  tags:
    - "languages"
    - "go"
    - "go-tools"

- include: "../../install_go_packages.yml"
  vars:
    name: "install ko for Go-Kubernetes development"
    packages:
      - "github.com/google/ko/cmd/ko"
  tags:
    - containerization
    - kubernetes
    - ko


- name: add ko's bash completion
  shell:
    cmd: "/usr/share/go-tools/bin/ko completion bash > /etc/bash_completion.d/ko"
  when: "go_get_result.changed"
  changed_when: "go_get_result.changed"
  tags:
    - containerization
    - Kubernetes
    - ko

#
# Editors
#

- name: "add the full-featured versions of vim"
  apt:
    name: "{{ packages }}"
    state: "present"
  vars:
    packages:
    - "vim"
    - "vim-gtk"
  tags:
    - "editors"
    - "vim"

- name: add the typora signing key
  apt_key: 
    keyserver: "keyserver.ubuntu.com"
    id: "BA300B7755AFCFAE"
    state: "present"
  tags:
    - editors

- name: add the typora repository
  apt_repository: 
    repo: "deb https://typora.io linux/"
    state: "present"
    mode: "644"
  tags:
    - editors

- name: install typora
  apt:
    pkg: "typora"
    state: "present"
  tags:
    - editors
    
#
# NodeJS
#

- name: add the NodeJS signing key
  apt_key:
    url: "https://deb.nodesource.com/gpgkey/nodesource.gpg.key"
    state: "present"
  tags:
  - "node"

- name: add the NodeJS repositories
  apt_repository:
    repo: "{{ item }}"
    state: "present"
    mode: "644"
  with_items:
    - deb https://deb.nodesource.com/{{ nodejs_repo }} bionic main
    - deb-src https://deb.nodesource.com/{{ nodejs_repo }} bionic main
  tags:
  - "node"
    
- name: add NodeJS and NPM
  apt:
    pkg: 
    - "nodejs"
    - "npm"
    state: "latest"
  tags:
  - "node"

#
# Virtualization
#

- name: "install virtualization tools"
  apt:
    name: "{{ packages }}"
    state: "latest"
  vars:
    packages:
    - "vagrant"
    - "virtualbox"
    - "virtualbox-qt"
  tags:
    - "virtualization"

#
# Source Code Management
#

- name: "install Github CLI key"
  apt_key:
    id: "C99B11DEB97541F0"
    keyserver: "keyserver.ubuntu.com"
    state: "present"
  tags:
  - "github"
  - "git"

- name: "install Github repository"
  apt_repository:
    repo: "deb https://cli.github.com/packages focal main"
    state: "present"
  tags:
    - "github"
    - "git"

- name: "install Github CLI"
  apt:
    name: "gh"
    state: "latest"
  tags:
    - "github"
    - "git"
      
- name: install linux tools for git
  apt:
    name: "{{ packages }}"
    state: "latest"
  vars:
    packages:
    - git
    - git-doc
    - git-svn
  tags:
    - git

#
# Install Meld
#
- name: install meld
  apt:
    name: "meld"
    state: "latest"
  tags:
    - git
    - meld


- name: "install linux tools for Subversion"
  apt:
    name: "{{ packages }}"
    state: "latest"
  vars:
    packages:
    - "subversion"
    - "libsvn-java"
  tags:
    - "subversion"
 

#
# Build tools
#

- name: "install Java build tools"
  apt:
    name: "{{ packages }}"
    state: "latest"
  vars:
    packages:
    - "ant"
    - "gradle"
    - "maven"

- name: "install build tools"
  apt:
    name: "{{ packages }}"
    state: "latest"
  vars:
    packages:
    - "make"
    - "remake"
  tags:
  - "build-tools"

- name: "install protobuf compiler"
  snap:
    name: "protobuf"
    classic: yes
    state: "present"
  tags:
  - "protobuf"

#
# File formating tools
#

- name: install file formating tools
  apt:
    name: "python3-demjson"
    state: "latest"

#
# LDAP tools
#

- name: "install linux tools for LDAP"
  apt:
    name: "{{ packages }}"
    state: "latest"
  vars:
    packages:
    - "ldap-utils"
    - "ldapvi"
  tags:
    - "ldap"

#
# Networking
#

- name: "add packages that are useful when developing networking software"
  apt:
    name: "{{ packages }}"
    state: "latest"
  vars:
    packages:
    - "wireshark"
    - "nmapsi4"
  tags:
    - "networking"

#
# Graphics
#

- name: "add packages that are useful for designing UIs"
  apt:
    name: "{{ packages }}"
    state: "latest"
  vars:
    packages:
    - "gpick"
    - "gimp"
    - "inkscape"
    - "screenruler"
  tags:
    - "graphics"

#
# Inform
#

- name: "add packages needed to develop and run IF games"
  apt:
    name: "{{ packages }}"
    state: "latest"
  vars:
    packages:
    - "zoom-player"
    - "inform"
    - "inform-docs"
  tags:
    - "interactive-fiction"
    - "inform"

# RFC CLI browser

- name: "create the home directory for the RFC browser"
  file:
    name: "{{ rfc_home_directory }}"
    state: "directory"
  tags:
  - rfc

- name: "install the RFC browser"
  get_url:
    url: "{{ rfc_url }}"
    dest: "{{ rfc_home_directory }}"
    mode: "755"
  tags:
  - rfc

- name: "create a pretty symlink to the latest version of the RFC browser"
  file:
    src: "{{ rfc_home_directory }}"
    dest: "{{ rfc_installation_directory }}/latest"
    state: "link"
  tags:
  - "rfc"

- name: "create a symlink to the RFC browser executable"
  file:
    src: "{{ rfc_installation_directory }}/latest/{{ rfc_file }}"
    dest: "/usr/bin/{{ rfc_file }}"
    state: "link"
  tags:
  - "rfc"
