---
# File: roles/development/tasks/main.yml

#
# Editors
#

- name: "add the full-featured versions of vim"
  apt:
    name: "{{ packages }}"
    state: "present"
  vars:
    packages:
    - "vim"
    - "vim-gtk"
  tags:
    - "editors"
    - "vim"

- name: add the typora signing key
  get_url:
    url: http://keyserver.ubuntu.com/pks/lookup?op=get&search=0xba300b7755afcfae
    dest: /etc/apt/trusted.gpg.d/typora.asc
  tags:
    - editors
    - typora

- name: add the typora repository
  apt_repository: 
    repo: "deb https://typora.io/linux ./"
    state: "present"
    mode: "644"
  tags:
    - editors
    - typora

- name: install typora
  apt:
    pkg: "typora"
    state: "present"
  tags:
    - editors
    - typora
    
#
# NodeJS
#

- name: remove the NodeJS signing key
  file:
    path: /etc/apt/trusted.gpg.d/nodesource.asc
    state: absent
  tags:
  - node

- name: add the NodeJS repositories
  apt_repository:
    repo: "{{ item }}"
    state: absent
  with_items:
    - deb https://deb.nodesource.com/{{ nodejs_legacy_repo }} focal main
    - deb-src https://deb.nodesource.com/{{ nodejs_legacy_repo }} focal main
  tags:
  - node
    
- name: add NodeJS and NPM
  apt:
    pkg: 
    - nodejs
    state: absent
    purge: yes
  tags:
  - node

#
# Virtualization
#

- name: "install vagrant"
  apt:
    pkg:
    - "vagrant"
    state: "latest"
  tags:
  - vagrant
  - virtualization

- name: "install virtualbox (Ubuntu)"
  apt:
    pkg:
    - "virtualbox"
    - "virtualbox-qt"
    state: "latest"
  when: ansible_distribution == "Ubuntu"
  tags:
  - "virtualbox"
  - "virtualization"

- name: "install fasttrack repo key (Debian)"
  apt:
    pkg:
    - "fasttrack-archive-keyring"
    state: "present"
  when: ansible_distribution == "Debian"
  tags:
  - "virtualbox"
  - "virtualization"

- name: "install fastrack repo (Debian)"
  apt_repository:
    repo: "deb https://fasttrack.debian.net/debian-fasttrack/ {{ ansible_distribution_release }}-fasttrack main contrib"
    state: "present"
    update_cache: "yes"
  when: ansible_distribution == "Debian"
  tags:
  - "virtualbox"
  - "virtualization"

- name: "install staging repo (Debian)"
  apt_repository:
    repo: "deb https://fasttrack.debian.net/debian-fasttrack/ {{ ansible_distribution_release }}-backports-staging main contrib"
    state: "present"
    update_cache: "yes"
  when: ansible_distribution == "Debian"
  tags:
  - "virtualbox"
  - "virtualization"

- name: "install virtualbox (Debian)"
  apt:
    pkg:
    - "virtualbox"
    - "virtualbox-qt"
    state: "present"
  when: ansible_distribution == "Debian"
  tags:
  - "virtualbox"
  - "virtualization"

#
# Source Code Management
#

- name: "install Github CLI key"
  get_url:
    url: http://keyserver.ubuntu.com/pks/lookup?op=get&search=0x23f3d4ea75716059
    dest: /etc/apt/trusted.gpg.d/github-cli.asc
  tags:
  - "github"
  - "git"

- name: "install Github repository"
  apt_repository:
    repo: "deb https://cli.github.com/packages focal main"
    state: "present"
  tags:
    - "github"
    - "git"

- name: "install Github CLI"
  apt:
    name: "gh"
    state: "latest"
  tags:
    - "github"
    - "git"
      
- name: install linux tools for git
  apt:
    name: "{{ packages }}"
    state: "latest"
  vars:
    packages:
    - git
    - git-doc
    - git-svn
  tags:
    - git

#
# Install Meld
#
- name: install meld
  apt:
    name: "meld"
    state: "latest"
  tags:
    - git
    - meld


- name: "install linux tools for Subversion"
  apt:
    name: "{{ packages }}"
    state: "latest"
  vars:
    packages:
    - "subversion"
    - "libsvn-java"
  tags:
    - "subversion"
 
#
# Bug tracking
#

- include: "../../install_go_programs.yml"
  vars:
    name: "install git-bug"
    packages:
    - "github.com/MichaelMure/git-bug@v0.7.2"
  tags:
  - "bug-tracking"
  - "git-bug"

#
# Build tools
#

- name: clean legacy Java build tools
  apt:
    name: "{{ packages }}"
    state: absent
  vars:
    packages:
    - ant
    - gradle
    - maven
  tags:
  - java
  - build-tools
  - clean-legacy

- name: "install build tools"
  apt:
    name: "{{ packages }}"
    state: "latest"
  vars:
    packages:
    - "remake"
  tags:
  - "build-tools"
  - "make"

- name: "install protobuf compiler"
  snap:
    name: "protobuf"
    classic: yes
    state: "present"
  tags:
  - "protobuf"

#
# File formating tools
#

- name: install file formating tools
  apt:
    name: "python3-demjson"
    state: "latest"

#
# LDAP tools
#

- name: "install linux tools for LDAP"
  apt:
    name: "{{ packages }}"
    state: "latest"
  vars:
    packages:
    - "ldap-utils"
    - "ldapvi"
  tags:
    - "ldap"

#
# Networking
#

- name: "add packages that are useful when developing networking software"
  apt:
    name: "{{ packages }}"
    state: "latest"
  vars:
    packages:
    - "wireshark"
    - "nmapsi4"
  tags:
    - "networking"

#
# Graphics
#

- name: "add packages that are useful for designing UIs"
  apt:
    name: "{{ packages }}"
    state: "latest"
  vars:
    packages:
    - "gpick"
    - "gimp"
    - "inkscape"
    - "screenruler"
  tags:
    - "graphics"

#
# Inform
#

- name: "add packages needed to develop IF games"
  apt:
    pkg:
    - "inform"
    - "inform-docs"
    state: "latest"
  vars:
    packages:
  when: ansible_distribution != "Debian"
  tags:
    - "interactive-fiction"
    - "inform"

- name: "add stretch repositories needed for Inform7 dependencies"
  apt_repository:
    repo: "{{ item }}"
    state: present
    update_cache: yes
  with_items:
  - "deb http://deb.debian.org/debian stretch main"
  - "deb-src http://deb.debian.org/debian stretch main"
  when: ansible_distribution == "Debian"
  tags:
  - "interactive-fiction"
  - "inform"

- name: "add old dependencies needed for Inform7"
  apt:
    pkg:
    - libgoocanvas3
    - libgtkspell0
    - libjavascriptcoregtk-1.0-0
    - libwebkitgtk-1.0-0
    - libgtksourceview2.0-0
    state: present
  when: ansible_distribution == "Debian"
  tags:
  - "interactive-fiction"
  - "inform"

- name: "install Inform7"
  apt:
    deb: http://inform7.com/apps/6M62/gnome-inform7_6M62-1_amd64.deb
    state: "present"
  when: ansible_distribution == "Debian"
  tags:
    - "interactive-fiction"
    - "inform"

- name: "remove stretch repositories needed for Inform7 dependencies"
  apt_repository:
    repo: "{{ item }}"
    state: absent
    update_cache: yes
  with_items:
  - "deb http://deb.debian.org/debian stretch main"
  - "deb-src http://deb.debian.org/debian stretch main"
  when: ansible_distribution == "Debian"
  tags:
  - "interactive-fiction"
  - "inform"

- name: "add packages needed to play IF games"
  apt:
    pkg:
    - "frotz"
    - "zoom-player"
    state: "latest"
  tags:
    - "interactive-fiction"

# RFC CLI browser

- name: "create the home directory for the RFC browser"
  file:
    name: "{{ rfc_home_directory }}"
    state: "directory"
  tags:
  - rfc

- name: "install the RFC browser"
  get_url:
    url: "{{ rfc_url }}"
    dest: "{{ rfc_home_directory }}"
    mode: "755"
  tags:
  - rfc

- name: "create a pretty symlink to the latest version of the RFC browser"
  file:
    src: "{{ rfc_home_directory }}"
    dest: "{{ rfc_installation_directory }}/latest"
    state: "link"
  tags:
  - "rfc"

- name: "create a symlink to the RFC browser executable"
  file:
    src: "{{ rfc_installation_directory }}/latest/{{ rfc_file }}"
    dest: "/usr/bin/{{ rfc_file }}"
    state: "link"
  tags:
  - "rfc"

#
# Test tools
#

- name: "install siege for HTTP load testing"
  apt:
    pkg:
    - "siege"
    state: "latest"
  tags:
  - "testing"
  - "siege"
